name: Go
on: [push]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.12.10
      uses: actions/setup-go@v1
      with:
        go-version: 1.12.10
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/insolar/observer
    - name: Get dependencies
      run: |
        mkdir $GOPATH/bin
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0
        curl -sfL https://github.com/gojuno/minimock/releases/download/v2.1.9/minimock_2.1.9_Linux_x86_64.tar.gz | tar xzf - -C $GOPATH/bin/ minimock
        $GOPATH/bin/dep ensure -v
      env:
        GOPATH: /home/runner/work/observer/go
    - name: Env
      run: make env
      env:
        GOPATH: /home/runner/work/observer/go
    - name: Build
      run: make build
      env:
        GOPATH: /home/runner/work/observer/go
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.12.10
      uses: actions/setup-go@v1
      id: go
      with:
        go-version: 1.12.10
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/insolar/observer
    - name: Get dependencies
      run: |
        mkdir $GOPATH/bin
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0
        curl -sfL https://github.com/gojuno/minimock/releases/download/v2.1.9/minimock_2.1.9_Linux_x86_64.tar.gz | tar xzf - -C $GOPATH/bin/ minimock
        $GOPATH/bin/dep ensure -v
      env:
        GOPATH: /home/runner/work/observer/go
    - name: Test
      run: make test
      env:
        GOPATH: /home/runner/work/observer/go
  mocks:
    name: Check mocks
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.12.10
      uses: actions/setup-go@v1
      id: go
      with:
        go-version: 1.12.10
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/insolar/observer
    - name: Get dependencies
      run: |
        mkdir $GOPATH/bin
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0
        curl -sfL https://github.com/gojuno/minimock/releases/download/v2.1.9/minimock_2.1.9_Linux_x86_64.tar.gz | tar xzf - -C $GOPATH/bin/ minimock
        $GOPATH/bin/dep ensure -v
      env:
        GOPATH: /home/runner/work/observer/go
    - name: Check all necessary mocks were build
      continue-on-error: false
      run: |
        PATH="$GOPATH/bin:$PATH" go generate ./...
        git status
        git diff
        [[ $(git status -z | wc -c) -eq 0 ]]
      env:
        GOPATH: /home/runner/work/observer/go
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.12.10
      uses: actions/setup-go@v1
      id: go
      with:
        go-version: 1.12.10
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/insolar/observer
    - name: Get dependencies
      run: |
        mkdir $GOPATH/bin
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0
        curl -sfL https://github.com/gojuno/minimock/releases/download/v2.1.9/minimock_2.1.9_Linux_x86_64.tar.gz | tar xzf - -C $GOPATH/bin/ minimock
        $GOPATH/bin/dep ensure -v
      env:
        GOPATH: /home/runner/work/observer/go
    - name: Run linter
      continue-on-error: true
      run: |
        $GOPATH/bin/golangci-lint --color=always run ./...
      env:
        GOPATH: /home/runner/work/observer/go
